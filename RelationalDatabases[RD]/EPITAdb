SET statement_timeout = 0;
SET lock_timeout = 0;
SET client_encoding = 'UTF8';
SET standard_conforming_strings = on;
SET check_function_bodies = false;
SET client_min_messages = warning;



SET default_tablespace = '';

SET default_with_oids = false;



DROP TABLE IF EXISTS Programs;
DROP TABLE IF EXISTS Courses;
DROP TABLE IF EXISTS Lectures;
DROP TABLE IF EXISTS IndependentTeachers;
DROP TABLE IF EXISTS Groupss;
DROP TABLE IF EXISTS Students;
DROP TABLE IF EXISTS Credentials;
DROP TABLE IF EXISTS Teachers;
DROP TABLE IF EXISTS Attandances;
DROP TABLE IF EXISTS Exams;
DROP TABLE IF EXISTS Grades;
DROP TABLE IF EXISTS Presences;
DROP TABLE IF EXISTS StudentReports;



CREATE TABLE Credentials (
  userID int NOT NULL,
  username varchar(25),
  password varchar(50),
  email varchar(50),
  role varchar(25),
  UNIQUE (email)
);

CREATE TABLE Programs (
  programID int NOT NULL,
  programType varchar(10),
  duration int,
  curriculum varchar(500),
  dateStart date,
  dateEnd date
);

CREATE TABLE Students (
  studentID int NOT NULL,
  programID int NOT NULL,
  groupID int NOT NULL,
  email varchar(50),
  name varchar(50),
  contact varchar(14),
  isCandidate bool,
  hasRecruited bool,
  hasPaid bool,
  dateStart date,
  dateEnd date,
  UNIQUE (email)
);

CREATE TABLE Groupss (
  groupID int NOT NULL,
  programID int NOT NULL,
  groupType int
);

CREATE TABLE Teachers (
  teacherID int NOT NULL,
  email varchar(50),
  name varchar(50),
  contact varchar(14),
  hasRecruited bool,
  isPaid bool,
  bankID varchar(27),
  isReferenced bool,
  UNIQUE (email)
);

CREATE TABLE Lectures (
  lectureID int NOT NULL,
  teacherID int NOT NULL,
  attandaceID int NOT NULL,
  groupID int NOT NULL,
  courseID int NOT NULL,
  lectureName varchar(50),
  lectureType varchar(100),
  curriculum varchar(500),
  timeStart date,
  timeEnd date,
  room int,
  roomType varchar(50)
);

CREATE TABLE Courses (
  teacherID int NOT NULL,
  courseID int NOT NULL,
  courseName varchar(50),
  dateStart date,
  dateEnd date
);

CREATE TABLE IndependentTeachers (
  indTeacherID int NOT NULL,
  teacherID int NOT NULL,
  email varchar(50),
  name varchar(50),
  contact varchar(14),
  UNIQUE (email)
);

CREATE TABLE Presences (
  presenceID int NOT NULL,
  attandanceID int NOT NULL,
  studentID int NOT NULL,
  isPresent bool
);

CREATE TABLE Attandances (
  attandanceID int NOT NULL,
  population int,
  date date
);

CREATE TABLE Exams (
  examID int NOT NULL,
  courseID int NOT NULL,
  groupID int NOT NULL,
  lectureID int NOT NULL,
  examType varchar(50),  
  isIndividual bool,
  examWeight real
);

CREATE TABLE Grades (
  gradeID int NOT NULL,
  examID int NOT NULL,
  studentID int NOT NULL,
  grade real
);

CREATE TABLE StudentReports (
  stReportID int NOT NULL,
  studentID int NOT NULL,
  gradeID int NOT NULL,
  attandaceID int NOT NULL
);


ALTER TABLE ONLY Programs
    ADD CONSTRAINT pk_programss PRIMARY KEY (programID);

ALTER TABLE ONLY Courses
    ADD CONSTRAINT pk_courses PRIMARY KEY (courseID);

ALTER TABLE ONLY Lectures
    ADD CONSTRAINT pk_lectures PRIMARY KEY (lectureID);

ALTER TABLE ONLY IndependentTeachers
    ADD CONSTRAINT pk_independentteachers PRIMARY KEY (indTeacherID);

ALTER TABLE ONLY Groupss
    ADD CONSTRAINT pk_groupss PRIMARY KEY (groupID);

ALTER TABLE ONLY Students
    ADD CONSTRAINT pk_students PRIMARY KEY (studentID);

ALTER TABLE ONLY Credentials
    ADD CONSTRAINT pk_credentials PRIMARY KEY (userID);

ALTER TABLE ONLY Teachers
    ADD CONSTRAINT pk_teachers PRIMARY KEY (teacherID);

ALTER TABLE ONLY Attandances
    ADD CONSTRAINT pk_attandances PRIMARY KEY (attandanceID);

ALTER TABLE ONLY Exams
    ADD CONSTRAINT pk_exams PRIMARY KEY (examID);

ALTER TABLE ONLY Grades
    ADD CONSTRAINT pk_grades PRIMARY KEY (gradeID);

ALTER TABLE ONLY Presences
    ADD CONSTRAINT pk_presences PRIMARY KEY (presenceID);

ALTER TABLE ONLY StudentReports
    ADD CONSTRAINT pk_studentreports PRIMARY KEY (stReportID);


ALTER TABLE ONLY Programs
    ADD CONSTRAINT FK_Programs_Students FOREIGN KEY (programID) REFERENCES Students;

ALTER TABLE ONLY Students
    ADD CONSTRAINT FK_Students_Groupss FOREIGN KEY (groupID) REFERENCES Groupss;

ALTER TABLE ONLY Teachers
    ADD CONSTRAINT FK_Teachers_IndependentTeachers FOREIGN KEY (teacherID) REFERENCES IndependentTeachers;

ALTER TABLE ONLY Teachers
    ADD CONSTRAINT FK_Teachers_Courses FOREIGN KEY (teacherID) REFERENCES Courses;

ALTER TABLE ONLY Teachers
    ADD CONSTRAINT FK_Teachers_Lectures FOREIGN KEY (teacherID) REFERENCES Lectures;

ALTER TABLE Lectures
    ADD CONSTRAINT FK_Lectures_Attandances FOREIGN KEY (attandaceID) REFERENCES Attandances;

ALTER TABLE Lectures
    ADD CONSTRAINT FK_Lectures_Groupss FOREIGN KEY (groupID) REFERENCES Groupss;

ALTER TABLE Lectures
    ADD CONSTRAINT FK_Lectures_Courses FOREIGN KEY (courseID) REFERENCES Courses;

ALTER TABLE Courses
    ADD CONSTRAINT FK_Courses_Exams FOREIGN KEY (courseID) REFERENCES Exams;

ALTER TABLE Exams
    ADD CONSTRAINT FK_Exams_Grades FOREIGN KEY (examID) REFERENCES Grades;